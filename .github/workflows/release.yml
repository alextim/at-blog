name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Automatically cancel in-progress actions on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release
    if: ${{ github.ref_name == 'main' && github.repository_owner == 'alextim' }}
    runs-on: ubuntu-latest
    env:
      # NODE_AUTH_TOKEN: ${{ github.token }}
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # pulls all history and tags for Lerna to detect what packages changed.
          token: ${{ secrets.GITHUB_TOKEN }} # this token is available by default

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'
          # setup .npmrc using NODE_AUTH_TOKEN
          # name: Setup .npmrc file for publish
          # skip 'registry-url' and 'always-auth: true' parameters if these are provided by a custom .npmrc file
          registry-url: 'https://npm.pkg.github.com'
          scope: '@alextim'
          always-auth: true


      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Check if able to publish changes
        run: |
          cat /home/runner/work/_temp/.npmrc
          # npm whoami # will throw and exit if npm is not ready to publish

      - name: Cache Node Modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
          restore-keys: |
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-

      - name: Install NPM Dependencies
        run: yarn install --prefer-offline --frozen-lockfile --ignore-engines --registry https://registry.npmjs.org --network-timeout 300000
        env:
          CI: true
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: Creating .npmrc
      #  run: |
      #    cat << EOF > "$HOME/.npmrc"
      #      @alextim:registry=https://npm.pkg.github.com
      #      //npm.pkg.github.com/:_authToken=$NPM_TOKEN
      #      //npm.pkg.github.com/:always-auth=true
      #    EOF
      #  env:
      #    NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: Release snapshot
      #  run: |
      #    yarn changeset version --snapshot
      #    yarn changeset publish --tag canary
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish
        #  env:
        #    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #    NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #    NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dir
          lerna publish --no-verify-access # the flag is needed if NPM_TOKEN is an Automation Token
        # lerna version --conventional-commits --conventional-graduate --yes
        # lerna publish from-git --yes --no-verify-access --force-publish
        # yarn lerna publish from-package --yes

      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        # You can do something when a publish happens.
        run: |
          # my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
          echo "A new version of ${GITHUB_REPOSITORY} was published!"

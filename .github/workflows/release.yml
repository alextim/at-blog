name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Automatically cancel in-progress actions on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release
    if: ${{ github.ref_name == 'main' && github.repository_owner == 'alextim' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'
          registry-url: https://npm.pkg.github.com/
          scope: '@alextim'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Cache Node Modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
          restore-keys: |
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-

      - name: Install NPM Dependencies
        run: yarn install --prefer-offline --frozen-lockfile --ignore-engines --registry https://registry.npmjs.org --network-timeout 300000
        env:
          CI: true

      #- name: Creating .npmrc
      #  run: |
      #    cat << EOF > "$HOME/.npmrc"
      #      @alextim:registry=https://npm.pkg.github.com
      #      //npm.pkg.github.com/:_authToken=$NPM_TOKEN
      #    EOF
      #  env:
      #    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      #- name: Release snapshot
      #  run: |
      #    yarn changeset version --snapshot
      #    yarn changeset publish --tag canary
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish
        run: |
          lerna publish from-package --yes --no-verify-access
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        # You can do something when a publish happens.
        run: |
          # my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
          echo "A new version of ${GITHUB_REPOSITORY} was published!"

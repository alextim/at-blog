name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '.github'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '.github'
# Automatically cancel in-progress actions on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request_target' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release
    # if: ${{ github.ref_name == 'main' && github.repository_owner == 'alextim' }}
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # pulls all history and tags for Lerna to detect what packages changed.
          token: ${{ secrets.GITHUB_TOKEN }} # this token is available by default

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          # cache: yarn
          # setup .npmrc using NODE_AUTH_TOKEN
          # name: Setup .npmrc file for publish
          # skip 'registry-url' and 'always-auth: true' parameters if these are provided by a custom .npmrc file
          registry-url: 'https://npm.pkg.github.com'
          scope: '@alextim'
          always-auth: true

      - name: Git Identity
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"

<<<<<<< HEAD
      #- name: Cache Node Modules
      #  id: cache-node
      #  uses: actions/cache@v2
      #  with:
      #    path: '**/node_modules'
      #    key: cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
      #    restore-keys: |
      #      cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
      #      cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
=======
      - name: Cache Node Modules
        id: cache-node
        uses: actions/cache@v3.2.2
        with:
          path: '**/node_modules'
          key: cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
          restore-keys: |
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
>>>>>>> 97e7516ba7bdc20af75a0fa94020f3cbc9e9367f

      #- name: Install NPM Dependencies
      #  run: yarn install --prefer-offline --frozen-lockfile --ignore-engines --registry https://registry.npmjs.org --network-timeout 300000
      #  env:
      #    CI: true
      #    NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup PNPM
        id: pnpm-install
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        env:
          CI: true
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: Build
      #  run: |
      #    yarn build

      #- name: Test
      #  run: |
      #    yarn test

      - name: Publish
        env:
          NODE_ENV: development
        run: |
          lerna publish --no-verify-access # the flag is needed if NPM_TOKEN is an Automation Token
